{"ast":null,"code":"var _jsxFileName = \"/Users/kulta/Code/part6/graphql-phonebook-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nimport Persons from './components/Persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_PERSONS = gql`\n    query {\n        allPersons {\n            id\n            name\n            phone\n            address {\n                street\n                city\n            }\n        }\n    }\n`;\n\nconst App = () => {\n  _s();\n\n  // const {loading, error, data} = useQuery(ALL_PERSONS)\n  const result = useQuery(ALL_PERSONS);\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (result.error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error : \", result.error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  } // return <>{result.data.allPersons.map((p) => p.name).join(', ')}</>\n\n\n  return /*#__PURE__*/_jsxDEV(Persons, {\n    persons: result.data.allPersons.map\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"JqpwbFFyOF6wIHaj5E6obYHTpSg=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kulta/Code/part6/graphql-phonebook-frontend/src/App.js"],"names":["gql","useQuery","Persons","ALL_PERSONS","App","result","loading","error","message","data","allPersons","map"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AACA,MAAMC,WAAW,GAAGH,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAaA,MAAMI,GAAG,GAAG,MAAM;AAAA;;AACd;AACA,QAAMC,MAAM,GAAGJ,QAAQ,CAACE,WAAD,CAAvB;;AACA,MAAIE,MAAM,CAACC,OAAX,EAAoB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAID,MAAM,CAACE,KAAX,EAAkB;AACd,wBAAO;AAAA,6BAAYF,MAAM,CAACE,KAAP,CAAaC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GARa,CASd;;;AACA,sBAAO,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEH,MAAM,CAACI,IAAP,CAAYC,UAAZ,CAAuBC;AAAzC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAXD;;GAAMP,G;UAEaH,Q;;;KAFbG,G;AAaN,eAAeA,GAAf","sourcesContent":["import { gql, useQuery } from '@apollo/client'\nimport Persons from './components/Persons'\nconst ALL_PERSONS = gql`\n    query {\n        allPersons {\n            id\n            name\n            phone\n            address {\n                street\n                city\n            }\n        }\n    }\n`\nconst App = () => {\n    // const {loading, error, data} = useQuery(ALL_PERSONS)\n    const result = useQuery(ALL_PERSONS)\n    if (result.loading) {\n        return <div>loading...</div>\n    }\n    if (result.error) {\n        return <p>Error : {result.error.message}</p>\n    }\n    // return <>{result.data.allPersons.map((p) => p.name).join(', ')}</>\n    return <Persons persons={result.data.allPersons.map} />\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}