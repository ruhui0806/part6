{"ast":null,"code":"var _jsxFileName = \"/Users/kulta/Code/part6/graphql-phonebook-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\n// export default App\nimport { gql, useQuery } from '@apollo/client';\nimport Persons from './components/Persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ALL_PERSONS = gql`\n    query {\n        allPersons {\n            name\n            phone\n            id\n        }\n    }\n`;\n\nconst App = () => {\n  _s();\n\n  //const {loading, error, data} = useQuery(ALL_PERSONS)\n  const result = useQuery(ALL_PERSONS);\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (result.error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 30\n  }, this); // return <div>{result.data.allPersons.map((p) => p.name).join(', ')}</div>\n\n  return /*#__PURE__*/_jsxDEV(Persons, {\n    persons: result.data.allPersons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"JqpwbFFyOF6wIHaj5E6obYHTpSg=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kulta/Code/part6/graphql-phonebook-frontend/src/App.js"],"names":["gql","useQuery","Persons","ALL_PERSONS","App","result","loading","error","data","allPersons"],"mappings":";;;AAAA;AACA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AACA,MAAMC,WAAW,GAAGH,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMI,GAAG,GAAG,MAAM;AAAA;;AACd;AACA,QAAMC,MAAM,GAAGJ,QAAQ,CAACE,WAAD,CAAvB;;AAEA,MAAIE,MAAM,CAACC,OAAX,EAAoB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAID,MAAM,CAACE,KAAX,EAAkB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAPJ,CASd;;AACA,sBAAO,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEF,MAAM,CAACG,IAAP,CAAYC;AAA9B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAXD;;GAAML,G;UAEaH,Q;;;KAFbG,G;AAaN,eAAeA,GAAf","sourcesContent":["// export default App\nimport { gql, useQuery } from '@apollo/client'\nimport Persons from './components/Persons'\nconst ALL_PERSONS = gql`\n    query {\n        allPersons {\n            name\n            phone\n            id\n        }\n    }\n`\n\nconst App = () => {\n    //const {loading, error, data} = useQuery(ALL_PERSONS)\n    const result = useQuery(ALL_PERSONS)\n\n    if (result.loading) {\n        return <div>loading...</div>\n    }\n    if (result.error) return <div>Error!</div>\n\n    // return <div>{result.data.allPersons.map((p) => p.name).join(', ')}</div>\n    return <Persons persons={result.data.allPersons} />\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}