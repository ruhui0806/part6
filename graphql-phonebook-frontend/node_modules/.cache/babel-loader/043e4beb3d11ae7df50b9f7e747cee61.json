{"ast":null,"code":"var _jsxFileName = \"/Users/kulta/Code/part6/graphql-phonebook-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from '@apollo/client';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport { ALL_PERSONS } from './queries';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //const {loading, error, data} = useQuery(ALL_PERSONS)\n  const result = useQuery(ALL_PERSONS);\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (result.error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 30\n  }, this); // return <div>{result.data.allPersons.map((p) => p.name).join(', ')}</div>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Persons, {\n      persons: result.data.allPersons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"JqpwbFFyOF6wIHaj5E6obYHTpSg=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kulta/Code/part6/graphql-phonebook-frontend/src/App.js"],"names":["useQuery","PersonForm","Persons","ALL_PERSONS","App","result","loading","error","data","allPersons"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,WAAT,QAA4B,WAA5B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd;AACA,QAAMC,MAAM,GAAGL,QAAQ,CAACG,WAAD,CAAvB;;AAEA,MAAIE,MAAM,CAACC,OAAX,EAAoB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAID,MAAM,CAACE,KAAX,EAAkB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAPJ,CASd;;AACA,sBACI;AAAA,4BACI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEF,MAAM,CAACG,IAAP,CAAYC;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhBD;;GAAML,G;UAEaJ,Q;;;KAFbI,G;AAkBN,eAAeA,GAAf","sourcesContent":["import { useQuery } from '@apollo/client'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport { ALL_PERSONS } from './queries'\n\nconst App = () => {\n    //const {loading, error, data} = useQuery(ALL_PERSONS)\n    const result = useQuery(ALL_PERSONS)\n\n    if (result.loading) {\n        return <div>loading...</div>\n    }\n    if (result.error) return <div>Error!</div>\n\n    // return <div>{result.data.allPersons.map((p) => p.name).join(', ')}</div>\n    return (\n        <div>\n            <Persons persons={result.data.allPersons} />\n            <PersonForm />\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}