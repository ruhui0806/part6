{"ast":null,"code":"import { canUseAsyncIteratorSymbol } from \"../../../utilities/index.js\";\nexport default function readerIterator(reader) {\n  var iterator = {\n    next: function () {\n      return reader.read();\n    }\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  return iterator;\n}","map":{"version":3,"mappings":"AAKA,SAASA,yBAAT,QAA0C,6BAA1C;AAOA,eAAc,SAAUC,cAAV,CACZC,MADY,EAC0B;AAEtC,MAAMC,QAAQ,GAAsB;AAClCC,QAAI;AACF,aAAOF,MAAM,CAACG,IAAP,EAAP;AACD;AAHiC,GAApC;;AAMA,MAAIL,yBAAJ,EAA+B;AAC7BG,YAAQ,CAACG,MAAM,CAACC,aAAR,CAAR,GAAiC;AAC/B,aAAO,IAAP;AACD,KAFD;AAGD;;AAED,SAAOJ,QAAP;AACD","names":["canUseAsyncIteratorSymbol","readerIterator","reader","iterator","next","read","Symbol","asyncIterator"],"sources":["/Users/kulta/Code/part6/graphql-phonebook-frontend/node_modules/@apollo/src/link/http/iterators/reader.ts"],"sourcesContent":["/**\n * Original source:\n * https://github.com/kmalakoff/response-iterator/blob/master/src/iterators/reader.ts\n */\n\nimport { canUseAsyncIteratorSymbol } from \"../../../utilities\";\n\ninterface ReaderIterator<T> {\n  next(): Promise<ReadableStreamDefaultReadResult<T>>;\n  [Symbol.asyncIterator]?(): AsyncIterator<T>;\n}\n\nexport default function readerIterator<T>(\n  reader: ReadableStreamDefaultReader<T>\n): AsyncIterableIterator<T> {\n  const iterator: ReaderIterator<T> = {\n    next() {\n      return reader.read();\n    },\n  };\n\n  if (canUseAsyncIteratorSymbol) {\n    iterator[Symbol.asyncIterator] = function (): AsyncIterator<T> {\n      return this;\n    };\n  }\n\n  return iterator as AsyncIterableIterator<T>;\n}\n"]},"metadata":{},"sourceType":"module"}