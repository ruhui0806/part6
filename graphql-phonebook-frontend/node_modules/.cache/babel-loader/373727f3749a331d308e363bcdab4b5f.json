{"ast":null,"code":"import { GraphQLError } from '../error/GraphQLError.mjs';\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\n\nexport function getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new GraphQLError('Schema does not define the required query root type.', {\n        nodes: operation\n      });\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new GraphQLError('Schema is not configured for mutations.', {\n        nodes: operation\n      });\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new GraphQLError('Schema is not configured for subscriptions.', {\n        nodes: operation\n      });\n    }\n\n    return subscriptionType;\n  }\n\n  throw new GraphQLError('Can only have query, mutation and subscription operations.', {\n    nodes: operation\n  });\n}","map":{"version":3,"sources":["/Users/kulta/Code/part6/graphql-phonebook-frontend/node_modules/graphql/utilities/getOperationRootType.mjs"],"names":["GraphQLError","getOperationRootType","schema","operation","queryType","getQueryType","nodes","mutationType","getMutationType","subscriptionType","getSubscriptionType"],"mappings":"AAAA,SAASA,YAAT,QAA6B,2BAA7B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,oBAAT,CAA8BC,MAA9B,EAAsCC,SAAtC,EAAiD;AACtD,MAAIA,SAAS,CAACA,SAAV,KAAwB,OAA5B,EAAqC;AACnC,UAAMC,SAAS,GAAGF,MAAM,CAACG,YAAP,EAAlB;;AAEA,QAAI,CAACD,SAAL,EAAgB;AACd,YAAM,IAAIJ,YAAJ,CACJ,sDADI,EAEJ;AACEM,QAAAA,KAAK,EAAEH;AADT,OAFI,CAAN;AAMD;;AAED,WAAOC,SAAP;AACD;;AAED,MAAID,SAAS,CAACA,SAAV,KAAwB,UAA5B,EAAwC;AACtC,UAAMI,YAAY,GAAGL,MAAM,CAACM,eAAP,EAArB;;AAEA,QAAI,CAACD,YAAL,EAAmB;AACjB,YAAM,IAAIP,YAAJ,CAAiB,yCAAjB,EAA4D;AAChEM,QAAAA,KAAK,EAAEH;AADyD,OAA5D,CAAN;AAGD;;AAED,WAAOI,YAAP;AACD;;AAED,MAAIJ,SAAS,CAACA,SAAV,KAAwB,cAA5B,EAA4C;AAC1C,UAAMM,gBAAgB,GAAGP,MAAM,CAACQ,mBAAP,EAAzB;;AAEA,QAAI,CAACD,gBAAL,EAAuB;AACrB,YAAM,IAAIT,YAAJ,CAAiB,6CAAjB,EAAgE;AACpEM,QAAAA,KAAK,EAAEH;AAD6D,OAAhE,CAAN;AAGD;;AAED,WAAOM,gBAAP;AACD;;AAED,QAAM,IAAIT,YAAJ,CACJ,4DADI,EAEJ;AACEM,IAAAA,KAAK,EAAEH;AADT,GAFI,CAAN;AAMD","sourcesContent":["import { GraphQLError } from '../error/GraphQLError.mjs';\n\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\nexport function getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new GraphQLError(\n        'Schema does not define the required query root type.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new GraphQLError('Schema is not configured for mutations.', {\n        nodes: operation,\n      });\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new GraphQLError('Schema is not configured for subscriptions.', {\n        nodes: operation,\n      });\n    }\n\n    return subscriptionType;\n  }\n\n  throw new GraphQLError(\n    'Can only have query, mutation and subscription operations.',\n    {\n      nodes: operation,\n    },\n  );\n}\n"]},"metadata":{},"sourceType":"module"}