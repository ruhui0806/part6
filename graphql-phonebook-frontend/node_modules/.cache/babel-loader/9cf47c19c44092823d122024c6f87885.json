{"ast":null,"code":"var _jsxFileName = \"/Users/kulta/Code/part6/graphql-phonebook-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ALL_PERSONS = gql`\n    query {\n        allPersons {\n            id\n            name\n            phone\n            address {\n                street\n                city\n            }\n        }\n    }\n`;\n\nconst App = () => {\n  _s();\n\n  const result = useQuery(ALL_PERSONS);\n\n  if (result.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  } // if (result.error) {\n  //     return <p>Error : {result.error.message}</p>\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: result.data.allPersons.map(p => p.name).join(', ')\n  }, void 0, false);\n};\n\n_s(App, \"JqpwbFFyOF6wIHaj5E6obYHTpSg=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kulta/Code/part6/graphql-phonebook-frontend/src/App.js"],"names":["gql","useQuery","ALL_PERSONS","App","result","loading","data","allPersons","map","p","name","join"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;;;AACA,MAAMC,WAAW,GAAGF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;;AAaA,MAAMG,GAAG,GAAG,MAAM;AAAA;;AACd,QAAMC,MAAM,GAAGH,QAAQ,CAACC,WAAD,CAAvB;;AACA,MAAIE,MAAM,CAACC,OAAX,EAAoB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAJa,CAKd;AACA;AACA;;;AAEA,sBAAO;AAAA,cAAGD,MAAM,CAACE,IAAP,CAAYC,UAAZ,CAAuBC,GAAvB,CAA4BC,CAAD,IAAOA,CAAC,CAACC,IAApC,EAA0CC,IAA1C,CAA+C,IAA/C;AAAH,mBAAP;AACH,CAVD;;GAAMR,G;UACaF,Q;;;KADbE,G;AAYN,eAAeA,GAAf","sourcesContent":["import { gql, useQuery } from '@apollo/client'\nconst ALL_PERSONS = gql`\n    query {\n        allPersons {\n            id\n            name\n            phone\n            address {\n                street\n                city\n            }\n        }\n    }\n`\nconst App = () => {\n    const result = useQuery(ALL_PERSONS)\n    if (result.loading) {\n        return <div>loading...</div>\n    }\n    // if (result.error) {\n    //     return <p>Error : {result.error.message}</p>\n    // }\n\n    return <>{result.data.allPersons.map((p) => p.name).join(', ')}</>\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}