{"ast":null,"code":"import { canUseAsyncIteratorSymbol } from \"./canUse.js\";\nexport function isNodeResponse(value) {\n  return !!value.body;\n}\nexport function isReadableStream(value) {\n  return !!value.getReader;\n}\nexport function isAsyncIterableIterator(value) {\n  return !!(canUseAsyncIteratorSymbol && value[Symbol.asyncIterator]);\n}\nexport function isStreamableBlob(value) {\n  return !!value.stream;\n}\nexport function isBlob(value) {\n  return !!value.arrayBuffer;\n}\nexport function isNodeReadableStream(value) {\n  return !!value.pipe;\n}","map":{"version":3,"mappings":"AAEA,SAASA,yBAAT,QAA0C,aAA1C;AAEA,OAAM,SAAUC,cAAV,CAAyBC,KAAzB,EAAmC;AACvC,SAAO,CAAC,CAAEA,KAAsB,CAACC,IAAjC;AACD;AAED,OAAM,SAAUC,gBAAV,CAA2BF,KAA3B,EAAqC;AACzC,SAAO,CAAC,CAAEA,KAA6B,CAACG,SAAxC;AACD;AAED,OAAM,SAAUC,uBAAV,CACJJ,KADI,EACM;AAEV,SAAO,CAAC,EACNF,yBAAyB,IACxBE,KAAoC,CAACK,MAAM,CAACC,aAAR,CAF/B,CAAR;AAID;AAED,OAAM,SAAUC,gBAAV,CAA2BP,KAA3B,EAAqC;AACzC,SAAO,CAAC,CAAEA,KAAc,CAACQ,MAAzB;AACD;AAED,OAAM,SAAUC,MAAV,CAAiBT,KAAjB,EAA2B;AAC/B,SAAO,CAAC,CAAEA,KAAc,CAACU,WAAzB;AACD;AAED,OAAM,SAAUC,oBAAV,CAA+BX,KAA/B,EAAyC;AAC7C,SAAO,CAAC,CAAEA,KAA4B,CAACY,IAAvC;AACD","names":["canUseAsyncIteratorSymbol","isNodeResponse","value","body","isReadableStream","getReader","isAsyncIterableIterator","Symbol","asyncIterator","isStreamableBlob","stream","isBlob","arrayBuffer","isNodeReadableStream","pipe"],"sources":["/Users/kulta/Code/part6/graphql-phonebook-frontend/node_modules/@apollo/src/utilities/common/responseIterator.ts"],"sourcesContent":["import { Response as NodeResponse } from \"node-fetch\";\nimport { Readable as NodeReadableStream } from \"stream\";\nimport { canUseAsyncIteratorSymbol } from \"./canUse\";\n\nexport function isNodeResponse(value: any): value is NodeResponse {\n  return !!(value as NodeResponse).body;\n}\n\nexport function isReadableStream(value: any): value is ReadableStream<any> {\n  return !!(value as ReadableStream<any>).getReader;\n}\n\nexport function isAsyncIterableIterator(\n  value: any\n): value is AsyncIterableIterator<any> {\n  return !!(\n    canUseAsyncIteratorSymbol &&\n    (value as AsyncIterableIterator<any>)[Symbol.asyncIterator]\n  );\n}\n\nexport function isStreamableBlob(value: any): value is Blob {\n  return !!(value as Blob).stream;\n}\n\nexport function isBlob(value: any): value is Blob {\n  return !!(value as Blob).arrayBuffer;\n}\n\nexport function isNodeReadableStream(value: any): value is NodeReadableStream {\n  return !!(value as NodeReadableStream).pipe;\n}\n"]},"metadata":{},"sourceType":"module"}