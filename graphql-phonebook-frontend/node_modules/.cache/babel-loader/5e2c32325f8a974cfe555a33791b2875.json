{"ast":null,"code":"var _jsxFileName = \"/Users/kulta/Code/part6/graphql-phonebook-frontend/src/index.js\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ApolloProvider, HttpLink, ApolloClient, InMemoryCache } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: 'http://localhost:4000'\n  })\n}); // client.query({ query }).then((res) => console.log(res.data))\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 5\n}, this)); // import ReactDOM from 'react-dom'\n// import App from './App'\n// import {\n//     ApolloClient,\n//     ApolloProvider,\n//     HttpLink,\n//     InMemoryCache,\n// } from '@apollo/client'\n// const client = new ApolloClient({\n//     cache: new InMemoryCache(),\n//     link: new HttpLink({\n//         uri: 'http://localhost:4000',\n//     }),\n// })\n// ReactDOM.render(\n//     <ApolloProvider client={client}>\n//         <App />\n//     </ApolloProvider>,\n//     document.getElementById('root')\n// )","map":{"version":3,"sources":["/Users/kulta/Code/part6/graphql-phonebook-frontend/src/index.js"],"names":["ReactDOM","App","ApolloProvider","HttpLink","ApolloClient","InMemoryCache","client","cache","link","uri","root","createRoot","document","getElementById","render"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SACIC,cADJ,EAEIC,QAFJ,EAGIC,YAHJ,EAIIC,aAJJ,QAKO,gBALP;;AAOA,MAAMC,MAAM,GAAG,IAAIF,YAAJ,CAAiB;AAC5BG,EAAAA,KAAK,EAAE,IAAIF,aAAJ,EADqB;AAE5BG,EAAAA,IAAI,EAAE,IAAIL,QAAJ,CAAa;AACfM,IAAAA,GAAG,EAAE;AADU,GAAb;AAFsB,CAAjB,CAAf,C,CAOA;;AAEA,MAAMC,IAAI,GAAGV,QAAQ,CAACW,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AAEAH,IAAI,CAACI,MAAL,eACI,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAER,MAAxB;AAAA,yBACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ,E,CAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ReactDOM from 'react-dom'\nimport App from './App'\n\nimport {\n    ApolloProvider,\n    HttpLink,\n    ApolloClient,\n    InMemoryCache,\n} from '@apollo/client'\n\nconst client = new ApolloClient({\n    cache: new InMemoryCache(),\n    link: new HttpLink({\n        uri: 'http://localhost:4000',\n    }),\n})\n\n// client.query({ query }).then((res) => console.log(res.data))\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\n\nroot.render(\n    <ApolloProvider client={client}>\n        <App />\n    </ApolloProvider>\n)\n// import ReactDOM from 'react-dom'\n// import App from './App'\n\n// import {\n//     ApolloClient,\n//     ApolloProvider,\n//     HttpLink,\n//     InMemoryCache,\n// } from '@apollo/client'\n\n// const client = new ApolloClient({\n//     cache: new InMemoryCache(),\n//     link: new HttpLink({\n//         uri: 'http://localhost:4000',\n//     }),\n// })\n\n// ReactDOM.render(\n//     <ApolloProvider client={client}>\n//         <App />\n//     </ApolloProvider>,\n//     document.getElementById('root')\n// )\n"]},"metadata":{},"sourceType":"module"}